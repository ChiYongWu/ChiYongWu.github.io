<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://chiyongwu.github.io</id>
    <title>SwordPal&apos;s blog</title>
    <updated>2021-01-03T16:38:54.954Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://chiyongwu.github.io"/>
    <link rel="self" href="https://chiyongwu.github.io/atom.xml"/>
    <subtitle>等候未来的你</subtitle>
    <logo>https://chiyongwu.github.io/images/avatar.png</logo>
    <icon>https://chiyongwu.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, SwordPal&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[nvm安装配置教程]]></title>
        <id>https://chiyongwu.github.io/post/nvm-an-zhuang-pei-zhi-jiao-cheng/</id>
        <link href="https://chiyongwu.github.io/post/nvm-an-zhuang-pei-zhi-jiao-cheng/">
        </link>
        <updated>2021-01-03T16:36:21.000Z</updated>
        <content type="html"><![CDATA[<p>转载：https://www.longkui.site/development/nvm%e7%9a%84%e5%ae%89%e8%a3%85%e9%85%8d%e7%bd%ae%e4%b8%8e%e4%bd%bf%e7%94%a8/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[docker教程]]></title>
        <id>https://chiyongwu.github.io/post/docker-jiao-cheng/</id>
        <link href="https://chiyongwu.github.io/post/docker-jiao-cheng/">
        </link>
        <updated>2021-01-03T16:28:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="一-centos-7安装docker-ce">一、centos 7安装docker ce</h3>
<p>1、安装依赖包</p>
<pre><code>yum install -y yum-utils device-mapper-persistent-data lvm2
</code></pre>
<p>2、设置国内yum源</p>
<pre><code>yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
</code></pre>
<p>3、安装docker</p>
<pre><code>yum install -y docker-ce
</code></pre>
<p>4、启动/关闭docker服务</p>
<pre><code>systemctl start docker
systemctl stop docker
</code></pre>
<h3 id="二-常用命令">二、常用命令</h3>
<pre><code>搜索镜像：docker search [imageName]
拉取镜像: docker pull [imageName]:[image Tag]
查看本地镜像: docker images
运行容器: docker run [imageId]
查看运行中的docker：docker ps
查看所有历史容器：docker ps -a
查看docker容器日志：docker logs [-f] [containerId]
进入容器：docker exec -it [containerId] /bin/bash
docker拷贝文件：docker cp [localPath] [containerId]:[containerPath]
启动/停止/重启已存在的容器：docker start/stop/restart [containerId]
移除docker容器：docker rm [containerId]（容器必须在停止状态才能移除）
删除镜像：docker rmi [imageId]

-d：后台运行镜像
-t：启动一个终端
-i：标准输入
-p：容器內的端口映射到本机端口
-v：文件映射
</code></pre>
<h3 id="三-项目部署">三、项目部署</h3>
<p>原则：不要把配置文件和数据放在容器中，请在宿主机上创建配置文件目录和数据文件目录，再通过文件映射方式提供容器使用。</p>
<p>dockerhub网站可以搜镜像的使用方法，比如mysql：https://hub.docker.com/_/mysql</p>
<p>注意：</p>
<p>从宿主机外面访问宿主机上的容器，IP地址只需要填宿主机，端口填映射端口即可访问容器。若是容器间的通信，则不能填宿主机的IP和映射端口。同一个宿主机中的docker间通信，可以通过docker内部IP来访问。容器间的通信有如下3种方法：</p>
<ul>
<li>docker inspect [containerId]</li>
<li>每次重启容器都会变更IP，因此应进行docker网络创建。通过在docker run命令中让容器加入已有的docker网络，并起容器网络别名的方式，实现容器网络创建</li>
</ul>
<h3 id="四-docker网络创建">四、docker网络创建</h3>
<pre><code>docker network create beihe-network //创建docker网络
docker network ls //查看网络
</code></pre>
<p>举例：</p>
<pre><code>docker run -d -p 3306:3306 --network beihe-network --network-alias mysql-network --privileged=true -v /home/docker/mysql/conf/my.cnf:/etc/mysql/my.cnf -v /home/docker/mysql /data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 mysql:5.7.21
	

--network-alias：网络别名，当IP使用，直接写在配置文件中的ip位置
</code></pre>
<h3 id="五-dockerfile创建镜像">五、dockerfile创建镜像</h3>
<p>若要做镜像，请基于别人做好的镜像再做。比如java项目，去dockerhub下载java镜像，步骤如下：</p>
<pre><code>FROM hub.c.163.com/library/java  //拉取java容器镜像
RUN mkdir -p /home/app  //为容器创建目录
COPY pinter.jar /home/app  //将java项目拷贝到容器目录
WORKDIR /home/app  //设置工作目录
EXPOSE 8080  //设置端口号
CMD java -jar pinter.jar  //执行命令
</code></pre>
<p>生成镜像：</p>
<pre><code>docker build -t pinter:tagName .  //.是路径上下文
</code></pre>
<p>更多命令参考：https://www.runoob.com/docker/docker-dockerfile.html</p>
<p>RUN命令和CMD命令的区别：</p>
<p>RUN命令只在build时执行，CMD是每次容器运行时执行。</p>
<h3 id="六-docker-compose">六、docker-compose</h3>
<p>直接去http://get.daocloud.io/#install-compose下载docker compose，验证是否安装成功：</p>
<pre><code>docker-compose -v
</code></pre>
<p>docker-compose文件是yaml配置文件，模板：</p>
<pre><code>version: '2'
services:
  web:
    image: dockercloud/hello-world
    ports:
      - 8080
    networks:
      - front-tier
      - back-tier
 
  redis:
    image: redis
    links:
      - web
    networks:
      - back-tier
 
  lb:
    image: dockercloud/haproxy
    ports:
      - 80:80
    links:
      - web
    networks:
      - front-tier
      - back-tier
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
 
networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge
</code></pre>
<p>常用命令：</p>
<pre><code>后台启动容器：docker-compose up -d compose文件路径
查看容器：docker-compose ps
停止容器：docker-compose stop
查看日志：docker-compose logs
</code></pre>
<p>更多命令参考：https://www.cnblogs.com/minseo/p/11548177.html</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://chiyongwu.github.io/post/hello-gridea/</id>
        <link href="https://chiyongwu.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>